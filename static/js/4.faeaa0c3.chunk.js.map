{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","dialogCss","dialog","active","to","name","Message","message","mes","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sGCenKC,EAZI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAKC,UAAWC,IAAUC,OAAS,IAAMD,IAAUE,OAAnD,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCGvBC,EATC,SAACT,GACb,OACI,8BACI,qBAAKG,UAAWC,IAAUM,QAA1B,SAAoCV,EAAMW,S,yCCgChDC,EAAcC,YAAiB,IAkB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACf,GACpB,OACI,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACdC,SAAU,CAACC,IAAUX,GACrBJ,KAAK,iBACLgB,YAAY,yBAEpB,8BACI,kDAQDC,EAlDC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QACvBC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAiBN,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,OAE5C8B,EAAmBN,EAAMO,SACxBH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,IAAKuB,EAAExB,SAAcwB,EAAEhC,OAE1BwB,EAAMS,eAM3B,OAAKnC,EAAMoC,OAEP,sBAAKjC,UAAWC,IAAUyB,QAA1B,UACI,qBAAK1B,UAAWC,IAAUiC,aAA1B,SACKT,IAEL,qBAAKzB,UAAWC,IAAU6B,SAA1B,SACI,8BAAMD,MAEV,cAAClB,EAAD,CAAqBG,SAbT,SAACqB,GACjBtC,EAAMuC,YAAYD,EAAOH,sBAGH,cAAC,IAAD,CAAU5B,GAAI,Y,+CCrBxCiC,EAA6B,SAACd,GAAD,MAAY,CACzCU,OAAQV,EAAMe,KAAKL,S,OCcRM,sBACXC,aAdkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACiB,GACtB,MAAO,CACHL,YAAa,SAACJ,GACVS,EAASC,YAAmBV,UDNR,SAACW,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKhD,MAAMoC,OACT,cAACU,EAAD,eAAcE,KAAKhD,QADK,cAAC,IAAD,CAAUO,GAAG,eAHT,GACX0C,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAqCI,KCE/DL,CAGZjB","file":"static/js/4.faeaa0c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3l0Sl\",\"dialogsItems\":\"Dialogs_dialogsItems__3XkGt\",\"active\":\"Dialogs_active__2elue\",\"messages\":\"Dialogs_messages__3L9AK\",\"message\":\"Dialogs_message__1iAeY\"};","import React from 'react';\r\nimport dialogCss from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={dialogCss.dialog + ' ' + dialogCss.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport dialogCss from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={dialogCss.message}>{props.mes}</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport dialogCss from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\r\n\r\n    let messagesElements = state.messages\r\n        .map( m => <Message mes={m.message} key={m.id} /> );\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n    return (\r\n        <div className={dialogCss.dialogs}>\r\n            <div className={dialogCss.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={dialogCss.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                    validate={[required, maxLength50]} \r\n                    name=\"newMessageBody\" \r\n                    placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component{...this.props} />\r\n        }\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}